import os
import sys

Import("environment libfjirc libfjnet")

localenv = environment.Clone()
localenv.Append(LIBS = [libfjnet, libfjirc, 'fltk'])

if not ( sys.platform == 'win32' or sys.platform.startswith('win64') ):
  localenv.Append(CXXFLAGS = " -std=c++11 ")

if sys.platform == 'darwin':
  localenv.Append(FRAMEWORKS = ["Cocoa"])

platformenv = localenv.Clone()

kashyyyk_platform = SConscript(dirs = ["platform"], exports = "platformenv");
localenv.Append(LIBS=[kashyyyk_platform])

kashyyyk = localenv.Program("kashyyyk", ["kashyyyk.cpp", "reciever.cpp", "promise.cpp", "background.cpp", "prefs.cpp", "doubleinput.cpp", "serverlist.cpp", "server.cpp", "channel.cpp", "window.cpp"])

if sys.platform == 'darwin':
  AppDir = os.path.join(os.getcwd(), "Kashyyyk.app")
  CntDir = os.path.join(AppDir, "Contents")
  MOSDir = os.path.join(CntDir, "MacOS")
  if not os.path.exists(AppDir):
    os.makedirs(AppDir)
  if not os.path.exists(CntDir):
    os.makedirs(CntDir)
  if not os.path.exists(MOSDir):
    os.makedirs(MOSDir)

  localenv.Install(MOSDir, kashyyyk)

